apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    {{- include "movies.labels" . | nindent 4 }}
    app.kubernetes.io/component: mongodb
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 1001      
      initContainers:
      containers:
      - name: mongodb
        image: docker.io/bitnami/mongodb:4.0.12-debian-9-r43
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: mongodb-password
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: mongodb-root-password
        - name: MONGODB_USERNAME
          value: "okteto"
        - name: MONGODB_SYSTEM_LOG_VERBOSITY
          value: "0"
        - name: MONGODB_DISABLE_SYSTEM_LOG
          value: "no"
        - name: MONGODB_DATABASE
          value: "okteto"
        - name: MONGODB_ENABLE_IPV6
          value: "no"
        - name: MONGODB_ENABLE_DIRECTORY_PER_DB
          value: "no"
        ports:
        - name: mongodb
          containerPort: 27017
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
          subPath: 
        resources:
          {}
      volumes:
      - name: data
        emptyDir: {}